local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local window = library:AddWindow("SN SCRIPT V1", {
    main_color = Color3.fromRGB(143, 0, 255), -- Black background
    min_size = Vector2.new(380, 470), -- Size of the GUI
    can_resize = false, -- true or false
})

-- Create tabs
local mainTab = window:AddTab("Main") -- Main tab
local rebirthTab = window:AddTab("Farm") -- Rebirth tab
local killingTab = window:AddTab("Killing") -- Killing tab
local rocksTab = window:AddTab("Fast Glitch") -- Rocks tab

-- Show the tabs
mainTab:Show()
rebirthTab:Show()
killingTab:Show()
rocksTab:Show()

-- Add Free AutoLift Gamepass Button in Main Tab
mainTab:AddButton("AutoLift Gamepass", function()
    local gamepassFolder = game:GetService("ReplicatedStorage").gamepassIds
    local player = game:GetService("Players").LocalPlayer
    for _, gamepass in pairs(gamepassFolder:GetChildren()) do
        local value = Instance.new("IntValue")
        value.Name = gamepass.Name
        value.Value = gamepass.Value
        value.Parent = player.ownedGamepasses
    end
end)

-- Add Less Lag Button in Main Tab
mainTab:AddButton("No Lag", "Optimize game performance", function()
    for _, v in pairs(game:GetDescendants()) do
        if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Smoke") or v:IsA("Fire") or v:IsA("Sparkles") then
            v.Enabled = false
        end
    end
    local lighting = game:GetService("Lighting")
    lighting.GlobalShadows = false
    lighting.FogEnd = 9e9
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then
            v.Material = Enum.Material.SmoothPlastic
            if v:IsA("Texture") then
                v:Destroy()
            end
        end
    end
    settings().Rendering.QualityLevel = 1
end)

rebirthTab:AddButton("Hide Frames",function()
	local rSto = game:GetService("ReplicatedStorage")
local strF = rSto:FindFirstChild("strengthFrame")
local durF = rSto:FindFirstChild("durabilityFrame")

if strF then
    strF.Visible = false
end

if durF then
    durF.Visible = false
        end
end)

rebirthTab:AddSwitch("Fast Grind", function()
  local player = game:GetService("Players").LocalPlayer
  local isGrinding = true
  for i = 1, 30 do
    task.spawn(function()
      while isGrinding do
        player.muscleEvent:FireServer("rep")
        task.wait(0.01)
      end
    end) 
  end
end)

-- Rock Automation
local function rockAutomation(rockName, toggleState)
    if toggleState then
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local leftHand = character:WaitForChild("LeftHand")
        local rock = game.Workspace.machinesFolder:FindFirstChild(rockName):FindFirstChild("Rock")

        _G[rockName .. "autorock"] = true

        while _G[rockName .. "autorock"] do
            if rock then
                rock.Size = Vector3.new(2, 1, 1)
                rock.Transparency = 1
                rock.CanCollide = false

                for _, guiElement in pairs(rock.rockGui:GetChildren()) do
                    guiElement.Visible = false
                end

                for _, particleName in ipairs({"rockEmitter", "hoopParticle", "lavaParticle"}) do
                    if rock:FindFirstChild(particleName) then
                        rock[particleName]:Destroy()
                    end
                end

                rock.CFrame = leftHand.CFrame
            else
                warn(rockName .. " not found.")
            end
            wait()
        end
    else
        _G[rockName .. "autorock"] = false

        pcall(function()
            local rock = game.Workspace.machinesFolder:FindFirstChild(rockName):FindFirstChild("Rock")

            if rock then
                for _, guiElement in pairs(rock.rockGui:GetChildren()) do
                    guiElement.Visible = true
                end

                rock.CanCollide = true
                rock.Transparency = 0
                rock.Size = Vector3.new(23.18409538269043, 20.20000648498535, 24.44658088684082)
                rock.CFrame = CFrame.new(rock.originalPosition.Value)
            else
                warn(rockName .. " not found in Muscle King Mountain.")
            end
        end)
    end
end

-- Add Switches for Rock Automation
local rockSwitches = {
    "Ancient Jungle Rock",
    "Muscle King Rock",
    "Rock Of Legends",
    "Inferno Rock",
    "Mystic Rock",
    "Frozen Rock",
    "Tiny Rock",
}

for _, rockName in ipairs(rockSwitches) do
    local switch = rocksTab:AddSwitch(rockName, function(toggleState)
        rockAutomation(rockName, toggleState)
    end)
    switch:Set(false)
end

local whitelist = {}
local isAutoFarming = false
_G.autoKillActive = false

local function equipTool(toolName)
    local player = game.Players.LocalPlayer
    local backpack = player:FindFirstChild("Backpack")
    if backpack then
        local tool = backpack:FindFirstChild(toolName)
        if tool then
            player.Character.Humanoid:EquipTool(tool)
        end
    end
end

local function autoKill(toggleState)
    if toggleState then
        _G.autoKillActive = true
        equipTool("Punch")

        local function method1()
            while _G.autoKillActive do
                wait()
                local player = game.Players.LocalPlayer
                player.muscleEvent:FireServer("punch", "rightHand")
                player.muscleEvent:FireServer("punch", "leftHand")

                for _, otherPlayer in pairs(game.Players:GetChildren()) do
                    if otherPlayer.Name ~= player.Name then
                        local character = game.Workspace:FindFirstChild(otherPlayer.Name)
                        local localCharacter = game.Workspace:FindFirstChild(player.Name)

                        if character and localCharacter then
                            local leftHand = localCharacter:FindFirstChild("LeftHand")

                            if leftHand then
                                local head = character:FindFirstChild("Head")
                                if head then
                                    head.CFrame = leftHand.CFrame
                                end

                                for _, descendant in pairs(character:GetDescendants()) do
                                    if descendant:IsA("BasePart") and descendant.Name == "Handle" then
                                        descendant.CFrame = leftHand.CFrame
                                    end
                                end

                                local sweatPart = character:FindFirstChild("sweatPart")
                                if sweatPart then
                                    sweatPart.CFrame = leftHand.CFrame
                                end
                            end
                        end
                    end
                end
            end
        end

        local function method2()
            while _G.autoKillActive do
                wait()
                local player = game.Players.LocalPlayer
                player.muscleEvent:FireServer("punch", "rightHand")
                player.muscleEvent:FireServer("punch", "leftHand")

                for _, otherPlayer in pairs(game.Players:GetChildren()) do
                    if otherPlayer.Name ~= player.Name then
                        local character = game.Workspace:FindFirstChild(otherPlayer.Name)
                        local localCharacter = game.Workspace:FindFirstChild(player.Name)

                        if character and localCharacter then
                            local leftHand = localCharacter:FindFirstChild("LeftHand")

                            if leftHand then
                                local head = character:FindFirstChild("Head")
                                if head then
                                    head.Parent = nil
                                    wait(0.1)
                                    head.CFrame = leftHand.CFrame
                                    head.Parent = character
                                end

                                for _, descendant in pairs(character:GetDescendants()) do
                                    if descendant:IsA("BasePart") and descendant.Name == "Handle" then
                                        descendant.CFrame = leftHand.CFrame
                                    end
                                end

                                local sweatPart = character:FindFirstChild("sweatPart")
                                if sweatPart then
                                    sweatPart.CFrame = leftHand.CFrame
                                end
                            end
                        end
                    end
                end
            end
        end

        coroutine.wrap(method1)()
        coroutine.wrap(method2)()
    else
        _G.autoKillActive = false
    end
end

local function autoFarmLoop()
    isAutoFarming = true
    equipTool("Punch")

    while isAutoFarming do
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
            if otherPlayer ~= player and not table.find(whitelist, otherPlayer.Name) then
                pcall(function()
                    local otherHumanoidRootPart = otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart")
                    if otherHumanoidRootPart then
                        otherHumanoidRootPart.Size = Vector3.new(20, 20, 20)
                        otherHumanoidRootPart.Transparency = 1
                        otherHumanoidRootPart.Color = Color3.new(1, 0, 0)
                        otherHumanoidRootPart.Material = Enum.Material.Neon
                        otherHumanoidRootPart.CanCollide = false
                        otherHumanoidRootPart.CFrame = CFrame.new(1955.3785, 1.7816, 6170.521)

                        local punchTool = character:FindFirstChild("Punch")
                        if punchTool then
                            punchTool:Activate()
                        end
                    end
                end)
            end
        end
        humanoidRootPart.CFrame = CFrame.new(1953.2662, 1.7816, 6186.1226)
        wait(0.01)
    end
end

killingTab:AddSwitch("Auto Kill", function(state)
    if state then
        if killMethod == "Teleport" then
            isAutoFarming = true
            spawn(autoFarmLoop)
            print("Auto Kill (Teleport) Enabled")
        else
            _G.autoKillActive = true
            autoKill(true)
            print("Auto Kill (Non-Teleport) Enabled")
        end
    else
        isAutoFarming = false
        _G.autoKillActive = false
        print("Auto Kill Disabled")
    end
end):Set(false)

local dropdownKillMethod = killingTab:AddDropdown("Select Kill Method", function(method)
    killMethod = method
    print("Kill Method set to:", method)
end)

dropdownKillMethod:Add("Teleport")
dropdownKillMethod:Add("Non-Teleport")

local dropdownWhitelist = killingTab:AddDropdown("Whitelist Players", function(selectedPlayer)
    if not table.find(whitelist, selectedPlayer) then
        table.insert(whitelist, selectedPlayer)
    else
        for i, name in ipairs(whitelist) do
            if name == selectedPlayer then
                table.remove(whitelist, i)
                break
            end
        end
    end
    print("Updated Whitelist:", whitelist)
end)

for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
    if otherPlayer.Name ~= game.Players.LocalPlayer.Name then
        dropdownWhitelist:Add(otherPlayer.Name)
    end
end

game.Players.PlayerAdded:Connect(function(newPlayer)
    if newPlayer.Name ~= game.Players.LocalPlayer.Name then
        dropdownWhitelist:Add(newPlayer.Name)
    end
end)

game.Players.PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer.Name ~= game.Players.LocalPlayer.Name then
        dropdownWhitelist:Remove(leavingPlayer.Name)
    end
end)

killingTab:AddSwitch("Enable this for a faster auto kill", function(state)
    _G.fasterAutoKill = state

    local player = game.Players.LocalPlayer
    local punch = player.Backpack:FindFirstChild("Punch")
    local character = game.Workspace:FindFirstChild(player.Name)
    local punch1 = character and character:FindFirstChild("Punch")

    if state then
        if punch and punch:FindFirstChild("attackTime") then
            punch.attackTime.Value = 0
        elseif punch1 and punch1:FindFirstChild("attackTime") then
            punch1.attackTime.Value = 0
        end
    else
        if punch and punch:FindFirstChild("attackTime") then
            punch.attackTime.Value = 0.35
        elseif punch1 and punch1:FindFirstChild("attackTime") then
            punch1.attackTime.Value = 0.35
        end
    end
end):Set(false)

killingTab:AddSwitch("Auto Good Karma", function(bool)
    autoGoodKarma = bool

    if autoGoodKarma then
        spawn(function()
            while autoGoodKarma do
                local player = game.Players.LocalPlayer
                local playerChar = player.Character
                local rightHand = playerChar and playerChar:FindFirstChild("RightHand")
                local leftHand = playerChar and playerChar:FindFirstChild("LeftHand")

                if playerChar and rightHand and leftHand then
                    for _, target in ipairs(game.Players:GetPlayers()) do
                        if target ~= player then
                            local evilKarma = target:FindFirstChild("evilKarma")
                            local goodKarma = target:FindFirstChild("goodKarma")

                            if evilKarma and goodKarma and evilKarma:IsA("IntValue") and goodKarma:IsA("IntValue") and evilKarma.Value > goodKarma.Value then
                                local targetChar = target.Character
                                local rootPart = targetChar and targetChar:FindFirstChild("HumanoidRootPart")

                                if rootPart then
                                    firetouchinterest(rightHand, rootPart, 1)
                                    firetouchinterest(leftHand, rootPart, 1)
                                    firetouchinterest(rightHand, rootPart, 0)
                                    firetouchinterest(leftHand, rootPart, 0)
                                end
                            end
                        end
                    end
                end
                task.wait(0.1)
            end
        end)
    end
end)

killingTab:AddSwitch("Auto Bad Karma", function(bool)
    autoBadKarma = bool

    if autoBadKarma then
        spawn(function()
            while autoBadKarma do
                local player = game.Players.LocalPlayer
                local playerChar = player.Character
                local rightHand = playerChar and playerChar:FindFirstChild("RightHand")
                local leftHand = playerChar and playerChar:FindFirstChild("LeftHand")

                if playerChar and rightHand and leftHand then
                    for _, target in ipairs(game.Players:GetPlayers()) do
                        if target ~= player then
                            local evilKarma = target:FindFirstChild("evilKarma")
                            local goodKarma = target:FindFirstChild("goodKarma")

                            if evilKarma and goodKarma and evilKarma:IsA("IntValue") and goodKarma:IsA("IntValue") and goodKarma.Value > evilKarma.Value then
                                local targetChar = target.Character
                                local rootPart = targetChar and targetChar:FindFirstChild("HumanoidRootPart")

                                if rootPart then
                                    firetouchinterest(rightHand, rootPart, 1)
                                    firetouchinterest(leftHand, rootPart, 1)
                                    firetouchinterest(rightHand, rootPart, 0)
                                    firetouchinterest(leftHand, rootPart, 0)
                                end
                            end
                        end
                    end
                end
                task.wait(0.1)
            end
        end)
    end
end)

-- Create the Target Name Textbox
killingTab:AddTextBox("Player Username", function(text)
    targetPlayerName = text
end)

-- Kill Target Toggle
local killTarget = false
killingTab:AddSwitch("Auto Kill Player", function(bool)
    killTarget = bool -- Control variable

    while killTarget do
        local player = game.Players.LocalPlayer
        local target = game.Players:FindFirstChild(targetPlayerName)

        if target and target ~= player then
            local targetChar = target.Character
            local rootPart = targetChar and targetChar:FindFirstChild("HumanoidRootPart")

            if rootPart then
                local rightHand = player.Character and player.Character:FindFirstChild("RightHand")
                local leftHand = player.Character and player.Character:FindFirstChild("LeftHand")

                if rightHand and leftHand then
                    firetouchinterest(rightHand, rootPart, 1) -- Start touch event
                    firetouchinterest(leftHand, rootPart, 1)
                    firetouchinterest(rightHand, rootPart, 0) -- End touch event
                    firetouchinterest(leftHand, rootPart, 0)
                end
            end
        end

        wait(0.1) -- Adjust the delay as needed
    end
end)

local spying = false
killingTab:AddSwitch("Spy Player", function(bool)
    spying = bool

    if not spying then
        local player = game.Players.LocalPlayer
        local camera = workspace.CurrentCamera
        camera.CameraSubject = player.Character and player.Character:FindFirstChild("Humanoid") or player
        return
    end

    while spying do
        local player = game.Players.LocalPlayer
        local target = game.Players:FindFirstChild(targetPlayerName)

        if target and target ~= player then
            local targetChar = target.Character
            local targetHumanoid = targetChar and targetChar:FindFirstChild("Humanoid")

            if targetHumanoid then
                local camera = workspace.CurrentCamera
                camera.CameraSubject = targetHumanoid
            end
        end

        wait(0.1)
    end
end)

mainTab:AddButton("Destroy Ad Portal", function()
  local part = workspace:FindFirstChild("RobloxForwardPortals")
    if part then
        part:Destroy()
    end
end)
